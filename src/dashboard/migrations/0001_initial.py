# Generated by Django 4.1 on 2022-09-20 14:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Block1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=256)),
                ('name', models.CharField(max_length=256)),
                ('order', models.PositiveIntegerField(default=0)),
                ('menu', models.CharField(max_length=30)),
                ('sync_flag', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Menu Blocks Level 1',
            },
        ),
        migrations.CreateModel(
            name='Block2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=256)),
                ('name', models.CharField(max_length=256)),
                ('order', models.PositiveIntegerField(default=0)),
                ('menu', models.CharField(max_length=30)),
                ('sync_flag', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Menu Blocks Level 2',
            },
        ),
        migrations.CreateModel(
            name='Cache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('html_file', models.CharField(default=None, max_length=1024, null=True)),
                ('cached_html', models.CharField(default=None, max_length=1024, null=True)),
                ('cached_until', models.DateTimeField(default=None, null=True)),
            ],
            options={
                'verbose_name_plural': 'Cached',
            },
        ),
        migrations.CreateModel(
            name='Cardbox',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('row', models.PositiveIntegerField(default=0)),
                ('order', models.PositiveIntegerField(default=0)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('icon', models.CharField(blank=True, max_length=100, null=True)),
                ('height', models.CharField(default='400px', max_length=50)),
                ('notebook', models.CharField(max_length=1024)),
                ('scroll', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Cardboxes',
            },
        ),
        migrations.CreateModel(
            name='CardboxType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=10, unique=True)),
                ('width', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name_plural': 'Cardbox Types',
            },
        ),
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=25, unique=True)),
                ('order', models.PositiveIntegerField(default=0, unique=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('menu', models.CharField(max_length=30, unique=True)),
                ('sync_flag', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Dashboards',
            },
        ),
        migrations.CreateModel(
            name='DataPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=256, unique=True)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'Data Pages',
            },
        ),
        migrations.CreateModel(
            name='Link1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=256)),
                ('order', models.PositiveIntegerField(default=0)),
                ('menu', models.CharField(max_length=30)),
                ('sync_flag', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Menu Links Level 1',
            },
        ),
        migrations.CreateModel(
            name='Link2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=256)),
                ('order', models.PositiveIntegerField(default=0)),
                ('menu', models.CharField(max_length=30)),
                ('sync_flag', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Menu Links Level 2',
            },
        ),
        migrations.CreateModel(
            name='Link3',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=256)),
                ('order', models.PositiveIntegerField(default=0)),
                ('menu', models.CharField(max_length=30)),
                ('sync_flag', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Menu Links Level 3',
            },
        ),
        migrations.CreateModel(
            name='OrganizationalUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=25, unique=True)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Organizational Units',
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notebook', models.CharField(max_length=1024)),
                ('cron', models.CharField(max_length=50)),
                ('next_run', models.DateTimeField(default=None, null=True)),
                ('html_file', models.CharField(default=None, max_length=1024, null=True)),
            ],
            options={
                'verbose_name_plural': 'Schedulers',
            },
        ),
        migrations.AddConstraint(
            model_name='schedule',
            constraint=models.UniqueConstraint(fields=('notebook',), name='ux_schedule_notebook'),
        ),
        migrations.AddField(
            model_name='organizationalunit',
            name='members',
            field=models.ManyToManyField(to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='link3',
            name='block2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.block2'),
        ),
        migrations.AddField(
            model_name='link3',
            name='data_page',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.datapage'),
        ),
        migrations.AddField(
            model_name='link2',
            name='block1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.block1'),
        ),
        migrations.AddField(
            model_name='link2',
            name='data_page',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.datapage'),
        ),
        migrations.AddField(
            model_name='link1',
            name='dashboard',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.dashboard'),
        ),
        migrations.AddField(
            model_name='link1',
            name='data_page',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.datapage'),
        ),
        migrations.AddField(
            model_name='dashboard',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.organizationalunit'),
        ),
        migrations.AddField(
            model_name='cardbox',
            name='data_page',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.datapage'),
        ),
        migrations.AddField(
            model_name='cardbox',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.cardboxtype'),
        ),
        migrations.AddConstraint(
            model_name='cache',
            constraint=models.UniqueConstraint(fields=('html_file',), name='ux_cache_html_file'),
        ),
        migrations.AddField(
            model_name='block2',
            name='block1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.block1'),
        ),
        migrations.AddField(
            model_name='block1',
            name='dashboard',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.dashboard'),
        ),
        migrations.AddConstraint(
            model_name='link3',
            constraint=models.UniqueConstraint(fields=('block2', 'order'), name='ux_link3_block2_order'),
        ),
        migrations.AddConstraint(
            model_name='link2',
            constraint=models.UniqueConstraint(fields=('block1', 'order'), name='ux_link2_block1_order'),
        ),
        migrations.AddConstraint(
            model_name='link1',
            constraint=models.UniqueConstraint(fields=('dashboard', 'order'), name='ux_link1_dashboard_order'),
        ),
        migrations.AlterUniqueTogether(
            name='cardbox',
            unique_together={('data_page', 'row', 'order')},
        ),
        migrations.AddConstraint(
            model_name='block2',
            constraint=models.UniqueConstraint(fields=('block1', 'slug'), name='ux_block2_block1_slug'),
        ),
        migrations.AddConstraint(
            model_name='block2',
            constraint=models.UniqueConstraint(fields=('block1', 'order'), name='ux_block2_block1_order'),
        ),
        migrations.AddConstraint(
            model_name='block2',
            constraint=models.UniqueConstraint(fields=('block1', 'menu'), name='ux_block2_block1_menu'),
        ),
        migrations.AddConstraint(
            model_name='block1',
            constraint=models.UniqueConstraint(fields=('dashboard', 'slug'), name='ux_block1_dashboard_slug'),
        ),
        migrations.AddConstraint(
            model_name='block1',
            constraint=models.UniqueConstraint(fields=('dashboard', 'order'), name='ux_block1_dashboard_order'),
        ),
        migrations.AddConstraint(
            model_name='block1',
            constraint=models.UniqueConstraint(fields=('dashboard', 'menu'), name='ux_block1_dashboard_menu'),
        ),
    ]
